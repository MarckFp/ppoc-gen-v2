name: 'Deploy üöÄ'

on:
  push:
    tags:
      - '*.*.*'

#For NDK see: https://developer.android.com/ndk/downloads
env:
  GH_TOKEN: ${{ github.token }}
  NDK_VERSION: "28.1.13356709"

jobs:
  deploy:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
      contents: write
      discussions: write
    strategy:
      fail-fast: false
      matrix:
        include:
        # Windows
          - name: 'Windows x86 ü™ü'
            os: 'windows-2025'
            target: 'i686-pc-windows-msvc'
            platform: desktop
          - name: 'Windows x64 ü™ü'
            os: 'windows-2025'
            target: 'x86_64-pc-windows-msvc'
            platform: desktop
          - name: 'Windows ARM64 ü™ü'
            os: 'windows-2025'
            target: 'aarch64-pc-windows-msvc'
            platform: desktop
          # MacOS
          - name: 'MacOS x64 üçè'
            os: 'macos-15'
            target: 'x86_64-apple-darwin'
            platform: desktop
          - name: 'MacOS ARM64 üçè'
            os: 'macos-15'
            target: 'aarch64-apple-darwin'
            platform: desktop
          # Linux
          - name: 'Linux x64 üêß'
            os: 'ubuntu-24.04'
            target: 'x86_64-unknown-linux-gnu'
            platform: desktop
          - name: 'Linux ARM64 üêß'
            os: 'ubuntu-24.04-arm'
            target: 'aarch64-unknown-linux-gnu'
            platform: desktop
          # Android
          - name: 'Android ü§ñ'
            os: 'macos-15'
            target: 'aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android'
            platform: android
          # iOS
          - name: 'iOS üì±'
            os: 'macos-15'
            target: 'aarch64-apple-ios aarch64-apple-ios-sim'
            platform: ios
          # Web
          - name: 'Web üåê'
            os: 'ubuntu-24.04'
            target: 'wasm32-unknown-unknown'
            platform: web
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Set version üìù
        shell: bash
        env:
          RELEASE_TAG: ${{ github.ref_name }}
        run: |
          mv Cargo.toml Cargo.toml.orig
          sed "s/0\\.0\\.0-git/${RELEASE_TAG##*\/v}/" Cargo.toml.orig >Cargo.toml

      - name: Setup Rust Targets ü¶Ä
        run: rustup target add ${{ matrix.target }}

      - name: Setup Java ‚òï
        if: ${{ matrix.platform == 'android'}}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Setup Android ü§ñ
        if: ${{ matrix.platform == 'android'}}
        uses: android-actions/setup-android@v3

      - name: Install Cargo Binstall üõ†Ô∏è
        uses: cargo-bins/cargo-binstall@main

      - name: Setup Dependencies & Configs üõ†Ô∏è
        shell: bash
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

          case "${{ runner.os }}" in
            "Linux")
              sudo apt update -y 
              sudo apt install build-essential librsvg2-dev -y

              if [[ "${{ matrix.platform }}" != 'web' ]]; then
                sudo apt install libwebkit2gtk-4.1-dev libxdo-dev libglib2.0-dev libayatana-appindicator3-dev -y
              fi

              ARCH=$(uname -m)
              [[ "$ARCH" == "aarch64" ]] && TAILWIND_NAME="tailwindcss-linux-arm64" || TAILWIND_NAME="tailwindcss-linux-x64"
              ;;

            "macOS")
              TAILWIND_NAME="tailwindcss-macos-arm64"
              ;;

            "Windows")
              TAILWIND_NAME="tailwindcss-windows-x64.exe"
              ;;
          esac

          curl -sLO "https://github.com/tailwindlabs/tailwindcss/releases/latest/download/$TAILWIND_NAME"
          chmod +x $TAILWIND_NAME

          case "${{ matrix.platform }}" in
            "web")
              sed -i '/^\[web\.app\]$/a base_path = "dx-app"' Dioxus.toml
              ;;

            "android")
              sdkmanager "ndk;$NDK_VERSION"
              ;;
          esac

          ./$TAILWIND_NAME -i ./input.css -o ./assets/tailwind.css
          cargo binstall dioxus-cli --version 0.7.0-rc.0 -y

      - name: Build & Deploy ${{ matrix.name }} üöÄ
        shell: bash
        run: |
          case "${{ matrix.platform }}" in
            "desktop")
              dx bundle --release --platform ${{ matrix.platform }} --target ${{ matrix.target }} --features bundle
              ;;

            "android")
              dx build --release --platform android
              dx bundle --release --platform android --features bundle
              ;;

            "ios")
              dx bundle --release --platform ios --features bundle
              ;;

            *)
              dx bundle --release --platform ${{ matrix.platform }} --features bundle
              ;;
          esac

          if [[ "${{ matrix.platform }}" == "web" ]]; then
            cp target/dx/dx-app/release/web/public/index.html target/dx/dx-app/release/web/public/404.html
          fi

      - name: Optimize Wasm ‚ö°
        if: ${{ matrix.platform == 'web'}}
        uses: NiklasEi/wasm-opt-action@v2
        with:
          file: target/dx/dx-app/release/web/public/wasm/*.wasm
          optimize_all: true
          options: -Oz

      - name: Upload Github Pages üì§
        if: ${{ matrix.platform == 'web'}}
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/dx/dx-app/release/web/public/

      - name: Deploy Github Pages üåê
        if: ${{ matrix.platform == 'web' }}
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Install UPX üõ†Ô∏è
        if: ${{ matrix.platform == 'desktop' && matrix.name != 'MacOS x64 üçè' && matrix.name != 'MacOS ARM64 üçè'}}
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true

      - name: Upload Artifacts üì¶
        if: ${{ matrix.platform != 'web' }}
        shell: bash
        run: |
          case "${{ matrix.name }}" in
            "Windows x86 ü™ü")
              upx --best target/dx/dx-app/bundle/windows/bundle/nsis/DxApp_${{ github.ref_name }}_x86-setup.exe
              gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/windows/bundle/msi/DxApp_${{ github.ref_name }}_x86_en-US.msi \
                target/dx/dx-app/bundle/windows/bundle/nsis/DxApp_${{ github.ref_name }}_x86-setup.exe
              ;;
            "Windows x64 ü™ü")
              upx --best target/dx/dx-app/bundle/windows/bundle/nsis/DxApp_${{ github.ref_name }}_x64-setup.exe
              gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/windows/bundle/msi/DxApp_${{ github.ref_name }}_x64_en-US.msi \
                target/dx/dx-app/bundle/windows/bundle/nsis/DxApp_${{ github.ref_name }}_x64-setup.exe
              ;;

            "Windows ARM64 ü™ü")
              upx --best target/dx/dx-app/bundle/windows/bundle/nsis/DxApp_${{ github.ref_name }}_arm64-setup.exe
              gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/windows/bundle/msi/DxApp_${{ github.ref_name }}_arm64_en-US.msi \
                target/dx/dx-app/bundle/windows/bundle/nsis/DxApp_${{ github.ref_name }}_arm64-setup.exe
              ;;

            "Linux x64 üêß")
              upx --best target/dx/dx-app/bundle/linux/bundle/appimage/DxApp_${{ github.ref_name }}_amd64.AppImage
              gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/deb/DxApp_${{ github.ref_name }}_amd64.deb \
                target/dx/dx-app/bundle/linux/bundle/rpm/DxApp-${{ github.ref_name }}-.x86_64.rpm \
                target/dx/dx-app/bundle/linux/bundle/appimage/DxApp_${{ github.ref_name }}_amd64.AppImage
              ;;

            "Linux ARM64 üêß")
              upx --best target/dx/dx-app/bundle/linux/bundle/appimage/DxApp_${{ github.ref_name }}_aarch64.AppImage
              gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/linux/bundle/deb/DxApp_${{ github.ref_name }}_arm64.deb \
                target/dx/dx-app/bundle/linux/bundle/rpm/DxApp-${{ github.ref_name }}-.aarch64.rpm \
                target/dx/dx-app/bundle/linux/bundle/appimage/DxApp_${{ github.ref_name }}_aarch64.AppImage
              ;;

            "MacOS x64 üçè")
              gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/macos/bundle/dmg/DxApp_${{ github.ref_name }}_x64.dmg
              ;;

            "MacOS ARM64 üçè")
              gh release upload ${{ github.ref_name }} target/dx/dx-app/bundle/macos/bundle/dmg/DxApp_${{ github.ref_name }}_aarch64.dmg
              ;;

            "iOS üì±")
              mkdir Payload
              mv target/dx/dx-app/release/ios/DxApp.app Payload/
              zip -r DxApp_${{ github.ref_name }}.ipa Payload
              gh release upload ${{ github.ref_name }} DxApp_${{ github.ref_name }}.ipa
              ;;

            "Android ü§ñ")
              mv target/dx/dx-app/release/android/app/app/build/outputs/apk/debug/app-debug.apk target/dx/dx-app/release/android/app/app/build/outputs/apk/debug/DxApp_${{ github.ref_name }}.apk
              mv target/dx/dx-app/release/android/app/app/build/outputs/bundle/release/DxApp-aarch64-linux-android.aab target/dx/dx-app/release/android/app/app/build/outputs/bundle/release/DxApp_${{ github.ref_name }}.aab
              gh release upload ${{ github.ref_name }} target/dx/dx-app/release/android/app/app/build/outputs/apk/debug/DxApp_${{ github.ref_name }}.apk \
                target/dx/dx-app/release/android/app/app/build/outputs/bundle/release/DxApp_${{ github.ref_name }}.aab
              ;;
          esac
